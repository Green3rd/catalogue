{"ast":null,"code":"var _jsxFileName = \"/Users/green3rd/Documents/Git/catalogue/src/LoginPage/LoginForm/LoginForm.tsx\";\nimport React from \"react\";\nimport { Form, withFormik } from \"formik\";\nimport { initLoginFormValue, validateLoginSchema } from \"./validation\";\nimport { withRouter } from \"react-router\";\nimport { FormInput } from \"shared/Component/FormInput/FormInput\";\nimport { FormButton } from \"shared/Component/FormButton/FormButton\";\nimport \"./LoginForm.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginFormComponent = props => {\n  const {\n    isSubmitting,\n    errorText\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"LoginForm\",\n    children: [/*#__PURE__*/_jsxDEV(FormInput, {\n      label: \"Email\",\n      name: \"username\",\n      type: \"email\",\n      error: !!props.errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n      text: \"Login\",\n      disabled: isSubmitting,\n      errorText: errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = LoginFormComponent;\nconst LoginForm = withRouter(withFormik({\n  mapPropsToValues: initLoginFormValue,\n  validationSchema: validateLoginSchema,\n  handleSubmit: (values, {\n    props,\n    setSubmitting\n  }) => {\n    // send a request to a server\n    console.log(\"login\");\n  },\n  displayName: \"LoginForm\"\n})(LoginFormComponent));\nLoginForm.displayName = \"LoginForm\";\nexport { LoginForm };\nvar _c;\n$RefreshReg$(_c, \"LoginFormComponent\");","map":{"version":3,"names":["React","Form","withFormik","initLoginFormValue","validateLoginSchema","withRouter","FormInput","FormButton","jsxDEV","_jsxDEV","LoginFormComponent","props","isSubmitting","errorText","className","children","label","name","type","error","errors","email","fileName","_jsxFileName","lineNumber","columnNumber","text","disabled","_c","LoginForm","mapPropsToValues","validationSchema","handleSubmit","values","setSubmitting","console","log","displayName","$RefreshReg$"],"sources":["/Users/green3rd/Documents/Git/catalogue/src/LoginPage/LoginForm/LoginForm.tsx"],"sourcesContent":["import React from \"react\";\nimport { Form, FormikProps, withFormik } from \"formik\";\nimport { initLoginFormValue, validateLoginSchema } from \"./validation\";\nimport { withRouter, RouteComponentProps } from \"react-router\";\nimport { login } from \"shared/utils/callServer/callServer\";\nimport { ErrorMessage } from \"shared/utils/message\";\nimport { LoginFormValues } from \"./types\";\nimport { FormInput } from \"shared/Component/FormInput/FormInput\";\nimport { FormButton } from \"shared/Component/FormButton/FormButton\";\nimport \"./LoginForm.scss\";\nimport { routeName } from \"config/routeConfig\";\nimport { setTokenToStorage } from \"shared/utils/localstorage\";\n\ninterface OwnProps {\n  errorText?: string;\n  onFormError: (error: string) => void;\n}\n\ntype Props = OwnProps & RouteComponentProps & FormikProps<LoginFormValues>;\nconst LoginFormComponent: React.FC<Props> = (props) => {\n  const { isSubmitting, errorText } = props;\n\n  return (\n    <Form className=\"LoginForm\">\n      <FormInput\n        label=\"Email\"\n        name=\"username\"\n        type=\"email\"\n        error={!!props.errors.email}\n      />\n      <FormButton text=\"Login\" disabled={isSubmitting} errorText={errorText} />\n    </Form>\n  );\n};\n\nconst LoginForm = withRouter(\n  withFormik<OwnProps & RouteComponentProps, LoginFormValues>({\n    mapPropsToValues: initLoginFormValue,\n    validationSchema: validateLoginSchema,\n    handleSubmit: (values: LoginFormValues, { props, setSubmitting }) => {\n      // send a request to a server\n      console.log(\"login\");\n    },\n    displayName: \"LoginForm\",\n  })(LoginFormComponent)\n);\n\nLoginForm.displayName = \"LoginForm\";\nexport { LoginForm };\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAeC,UAAU,QAAQ,QAAQ;AACtD,SAASC,kBAAkB,EAAEC,mBAAmB,QAAQ,cAAc;AACtE,SAASC,UAAU,QAA6B,cAAc;AAI9D,SAASC,SAAS,QAAQ,sCAAsC;AAChE,SAASC,UAAU,QAAQ,wCAAwC;AACnE,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU1B,MAAMC,kBAAmC,GAAIC,KAAK,IAAK;EACrD,MAAM;IAAEC,YAAY;IAAEC;EAAU,CAAC,GAAGF,KAAK;EAEzC,oBACEF,OAAA,CAACR,IAAI;IAACa,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACzBN,OAAA,CAACH,SAAS;MACRU,KAAK,EAAC,OAAO;MACbC,IAAI,EAAC,UAAU;MACfC,IAAI,EAAC,OAAO;MACZC,KAAK,EAAE,CAAC,CAACR,KAAK,CAACS,MAAM,CAACC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFhB,OAAA,CAACF,UAAU;MAACmB,IAAI,EAAC,OAAO;MAACC,QAAQ,EAAEf,YAAa;MAACC,SAAS,EAAEA;IAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEX,CAAC;AAACG,EAAA,GAdIlB,kBAAmC;AAgBzC,MAAMmB,SAAS,GAAGxB,UAAU,CAC1BH,UAAU,CAAkD;EAC1D4B,gBAAgB,EAAE3B,kBAAkB;EACpC4B,gBAAgB,EAAE3B,mBAAmB;EACrC4B,YAAY,EAAEA,CAACC,MAAuB,EAAE;IAAEtB,KAAK;IAAEuB;EAAc,CAAC,KAAK;IACnE;IACAC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACtB,CAAC;EACDC,WAAW,EAAE;AACf,CAAC,CAAC,CAAC3B,kBAAkB,CACvB,CAAC;AAEDmB,SAAS,CAACQ,WAAW,GAAG,WAAW;AACnC,SAASR,SAAS;AAAG,IAAAD,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}