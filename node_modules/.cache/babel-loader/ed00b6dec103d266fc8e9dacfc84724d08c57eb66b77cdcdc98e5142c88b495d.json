{"ast":null,"code":"var _jsxFileName = \"/Users/green3rd/Documents/Git/catalogue/src/shared/Component/FormButton/FormButton.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { generateClassName } from \"shared/utils/reactClassName\";\nimport \"./FormButton.scss\";\nimport { LoadingAnimation } from \"./LoadingAnimation/LoadingAnimation\";\nimport { Overlay } from \"../Overlay/Overlay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormButton = props => {\n  _s();\n  const {\n    text,\n    disabled,\n    modifier,\n    onClick,\n    errorText\n  } = props;\n  const buttonRef = useRef(null);\n  const onButtonClick = e => {\n    var _buttonRef$current;\n    (_buttonRef$current = buttonRef.current) === null || _buttonRef$current === void 0 ? void 0 : _buttonRef$current.blur();\n    onClick && onClick(e);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"FormButton__Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      ref: buttonRef,\n      className: generateClassName(\"FormButton\", modifier),\n      type: onClick ? undefined : \"submit\" // Type: submit, will automaticcally call Fomik submit. (when not disable)\n      ,\n      disabled: disabled,\n      onClick: onButtonClick,\n      children: disabled ? /*#__PURE__*/_jsxDEV(LoadingAnimation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this) : text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), disabled && /*#__PURE__*/_jsxDEV(Overlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"FormButton__ErrorText\",\n      children: errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(FormButton, \"PvhYvZjqGdFMi5KDqD8tkkFprO8=\");\n_c = FormButton;\nFormButton.displayName = \"FormButton\";\nexport { FormButton };\nvar _c;\n$RefreshReg$(_c, \"FormButton\");","map":{"version":3,"names":["React","useRef","generateClassName","LoadingAnimation","Overlay","jsxDEV","_jsxDEV","FormButton","props","_s","text","disabled","modifier","onClick","errorText","buttonRef","onButtonClick","e","_buttonRef$current","current","blur","className","children","ref","type","undefined","fileName","_jsxFileName","lineNumber","columnNumber","_c","displayName","$RefreshReg$"],"sources":["/Users/green3rd/Documents/Git/catalogue/src/shared/Component/FormButton/FormButton.tsx"],"sourcesContent":["import React, { MouseEventHandler, useRef } from \"react\";\nimport { generateClassName, Modifier } from \"shared/utils/reactClassName\";\nimport \"./FormButton.scss\";\nimport { LoadingAnimation } from \"./LoadingAnimation/LoadingAnimation\";\nimport { Overlay } from \"../Overlay/Overlay\";\n\ninterface Props {\n  text: string;\n  disabled?: boolean;\n  errorText?: string;\n  modifier?: Modifier;\n  onClick?: MouseEventHandler;\n}\n\nconst FormButton: React.FC<Props> = (props) => {\n  const { text, disabled, modifier, onClick, errorText } = props;\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const onButtonClick = (e: any) => {\n    buttonRef.current?.blur();\n    onClick && onClick(e);\n  };\n  return (\n    <div className=\"FormButton__Container\">\n      <button\n        ref={buttonRef}\n        className={generateClassName(\"FormButton\", modifier)}\n        type={onClick ? undefined : \"submit\"} // Type: submit, will automaticcally call Fomik submit. (when not disable)\n        disabled={disabled}\n        onClick={onButtonClick}\n      >\n        {disabled ? <LoadingAnimation /> : text}\n      </button>\n      {disabled && <Overlay />}\n      <span className=\"FormButton__ErrorText\">{errorText}</span>\n    </div>\n  );\n};\nFormButton.displayName = \"FormButton\";\nexport { FormButton };\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAuBC,MAAM,QAAQ,OAAO;AACxD,SAASC,iBAAiB,QAAkB,6BAA6B;AACzE,OAAO,mBAAmB;AAC1B,SAASC,gBAAgB,QAAQ,qCAAqC;AACtE,SAASC,OAAO,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU7C,MAAMC,UAA2B,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7C,MAAM;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAGN,KAAK;EAC9D,MAAMO,SAAS,GAAGd,MAAM,CAAoB,IAAI,CAAC;EACjD,MAAMe,aAAa,GAAIC,CAAM,IAAK;IAAA,IAAAC,kBAAA;IAChC,CAAAA,kBAAA,GAAAH,SAAS,CAACI,OAAO,cAAAD,kBAAA,uBAAjBA,kBAAA,CAAmBE,IAAI,CAAC,CAAC;IACzBP,OAAO,IAAIA,OAAO,CAACI,CAAC,CAAC;EACvB,CAAC;EACD,oBACEX,OAAA;IAAKe,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpChB,OAAA;MACEiB,GAAG,EAAER,SAAU;MACfM,SAAS,EAAEnB,iBAAiB,CAAC,YAAY,EAAEU,QAAQ,CAAE;MACrDY,IAAI,EAAEX,OAAO,GAAGY,SAAS,GAAG,QAAS,CAAC;MAAA;MACtCd,QAAQ,EAAEA,QAAS;MACnBE,OAAO,EAAEG,aAAc;MAAAM,QAAA,EAEtBX,QAAQ,gBAAGL,OAAA,CAACH,gBAAgB;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAAGnB;IAAI;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,EACRlB,QAAQ,iBAAIL,OAAA,CAACF,OAAO;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxBvB,OAAA;MAAMe,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAAER;IAAS;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAACpB,EAAA,CAtBIF,UAA2B;AAAAuB,EAAA,GAA3BvB,UAA2B;AAuBjCA,UAAU,CAACwB,WAAW,GAAG,YAAY;AACrC,SAASxB,UAAU;AAAG,IAAAuB,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}