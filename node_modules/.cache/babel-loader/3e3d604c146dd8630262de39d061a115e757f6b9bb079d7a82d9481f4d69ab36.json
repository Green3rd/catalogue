{"ast":null,"code":"var _jsxFileName = \"/Users/green3rd/Documents/Git/catalogue/src/AdminPage/AdminForm/ExportDataTable/ExportDataTable.tsx\";\nimport React from \"react\";\nimport \"./ExportDataTable.scss\";\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@mui/material\";\nimport { exportDataRow } from \"./mapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExportDataTable = props => {\n  const {\n    data,\n    mooncakeName\n  } = props.resp;\n  if (data.length <= 0) return null;\n  const headerStyle = {\n    fontSize: \"1em\",\n    color: \"#e6e6e6\"\n  };\n  const cellStyle = {\n    fontSize: \"1em\",\n    padding: \"4px 8px\"\n  };\n  const cellStyleMinor = {\n    fontSize: \"0.1em\",\n    padding: \"4px 8px\",\n    color: \"#eeeeee\"\n  };\n  const getCellContent = (data, item) => {\n    return data[item.field] || \"-\";\n  };\n  const header = data.map(item => {\n    return /*#__PURE__*/_jsxDEV(TableCell, {\n      className: \"ExportDataTable__HeaderCell\",\n      sx: headerStyle,\n      children: item.orderNumber\n    }, item.orderNumber, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    className: \"ExportDataTable__Container\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          className: \"ExportDataTable__Header\",\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            className: \"ExportDataTable__HeaderCell ExportDataTable__Cell--fixed\",\n            sx: headerStyle,\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), header]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: [mooncakeName.map((name, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            \"&:last-child td, &:last-child th\": {\n              border: 0\n            }\n          },\n          className: \"ExportDataTable__Item\",\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            className: \"ExportDataTable__Cell--fixed\",\n            sx: cellStyle,\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), data.map((data, dataIndex) => /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: data.mooncakeAmount[index] === 0 ? cellStyleMinor : cellStyle,\n            children: data.mooncakeAmount[index]\n          }, dataIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)), exportDataRow.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            \"&:last-child td, &:last-child th\": {\n              border: 0\n            }\n          },\n          className: \"ExportDataTable__Item\",\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            className: \"ExportDataTable__Cell--fixed\",\n            sx: cellStyle,\n            children: row.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), data.map((data, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n            className: \"ExportDataTable__Cell\",\n            sx: cellStyle,\n            children: getCellContent(data, row)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this))]\n        }, row.text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_c = ExportDataTable;\nExportDataTable.displayName = \"ExportDataTable\";\nexport { ExportDataTable };\nvar _c;\n$RefreshReg$(_c, \"ExportDataTable\");","map":{"version":3,"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","exportDataRow","jsxDEV","_jsxDEV","ExportDataTable","props","data","mooncakeName","resp","length","headerStyle","fontSize","color","cellStyle","padding","cellStyleMinor","getCellContent","item","field","header","map","className","sx","children","orderNumber","fileName","_jsxFileName","lineNumber","columnNumber","component","name","index","border","dataIndex","mooncakeAmount","row","text","_c","displayName","$RefreshReg$"],"sources":["/Users/green3rd/Documents/Git/catalogue/src/AdminPage/AdminForm/ExportDataTable/ExportDataTable.tsx"],"sourcesContent":["import React from \"react\";\n\nimport \"./ExportDataTable.scss\";\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport { ExportData, ExportDataResponse } from \"shared/utils/callServer/type\";\nimport { exportDataRow } from \"./mapper\";\n\ninterface OwnProps {\n  resp: ExportDataResponse;\n}\n\nexport interface ExportDataField {\n  text: string;\n  field: string;\n}\ntype Props = OwnProps;\n\nconst ExportDataTable: React.FC<Props> = (props) => {\n  const { data, mooncakeName } = props.resp;\n  if (data.length <= 0) return null;\n\n  const headerStyle = {\n    fontSize: \"1em\",\n    color: \"#e6e6e6\",\n  };\n\n  const cellStyle = {\n    fontSize: \"1em\",\n    padding: \"4px 8px\",\n  };\n\n  const cellStyleMinor = {\n    fontSize: \"0.1em\",\n    padding: \"4px 8px\",\n    color: \"#eeeeee\",\n  };\n\n  const getCellContent = (\n    data: ExportData,\n    item: ExportDataField\n  ): JSX.Element => {\n    return data[item.field] || \"-\";\n  };\n\n  const header = data.map((item) => {\n    return (\n      <TableCell\n        className=\"ExportDataTable__HeaderCell\"\n        key={item.orderNumber}\n        sx={headerStyle}\n      >\n        {item.orderNumber}\n      </TableCell>\n    );\n  });\n\n  return (\n    <TableContainer component={Paper} className=\"ExportDataTable__Container\">\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow className=\"ExportDataTable__Header\">\n            <TableCell\n              className=\"ExportDataTable__HeaderCell ExportDataTable__Cell--fixed\"\n              sx={headerStyle}\n            >\n              Name\n            </TableCell>\n            {/* Table Head - Order Number */}\n\n            {header}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {/* Mooncake amount */}\n          {mooncakeName.map((name, index) => (\n            <TableRow\n              key={index}\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              className=\"ExportDataTable__Item\"\n            >\n              <TableCell\n                className=\"ExportDataTable__Cell--fixed\"\n                sx={cellStyle}\n              >\n                {name}\n              </TableCell>\n              {data.map((data, dataIndex) => (\n                <TableCell key={dataIndex} sx={data.mooncakeAmount[index] === 0 ? cellStyleMinor : cellStyle}>\n                  {data.mooncakeAmount[index]}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n\n          {/* other fields */}\n          {exportDataRow.map((row) => (\n            <TableRow\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              className=\"ExportDataTable__Item\"\n              key={row.text}\n            >\n              <TableCell\n                className=\"ExportDataTable__Cell--fixed\"\n                sx={cellStyle}\n              >\n                {row.text}\n              </TableCell>\n              {data.map((data, index) => (\n                <TableCell key={index} className=\"ExportDataTable__Cell\" sx={cellStyle}>{getCellContent(data, row)}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nExportDataTable.displayName = \"ExportDataTable\";\nexport { ExportDataTable };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}