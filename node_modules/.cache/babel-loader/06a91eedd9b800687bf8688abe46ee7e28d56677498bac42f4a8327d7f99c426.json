{"ast":null,"code":"import axios from \"axios\";\nimport { getToken } from \"../localstorage\";\nconst SERVER_NAME = process.env.REACT_APP_SERVER_URL;\nconst callServer = (method, url, data) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${getToken()}`\n    }\n  };\n  return axios({\n    method,\n    data,\n    url: `${SERVER_NAME}${url}`,\n    ...config\n  });\n};\nconst GET = \"get\";\nconst POST = \"post\";\nexport const getItems = () => {\n  return callServer(GET, \"/mooncake\", {});\n};\nexport const submitOrder = data => {\n  return callServer(POST, \"/mooncake/submitOrder\", data);\n};\nexport const login = data => {\n  return callServer(POST, \"/auth/login\", data);\n};","map":{"version":3,"names":["axios","getToken","SERVER_NAME","process","env","REACT_APP_SERVER_URL","callServer","method","url","data","config","headers","Authorization","GET","POST","getItems","submitOrder","login"],"sources":["/Users/green3rd/Documents/Git/catalogue/src/shared/utils/callServer/callServer.ts"],"sourcesContent":["import axios, { Method } from \"axios\";\nimport { getToken } from \"../localstorage\";\nimport {\n  BlankRequest,\n  GetItemsResponse,\n  LoginRequest,\n  LoginResponse,\n  MyServerReponse,\n  SubmitOrderRequest,\n  SubmitOrderResponse,\n} from \"./type\";\n\nconst SERVER_NAME = process.env.REACT_APP_SERVER_URL;\n\ntype RequestType = BlankRequest;\n\nconst callServer = (\n  method: Method,\n  url: string,\n  data: RequestType\n): Promise<any> => {\n  const config = {\n    headers: { Authorization: `Bearer ${getToken()}` },\n  };\n  return axios({\n    method,\n    data,\n    url: `${SERVER_NAME}${url}`,\n    ...config,\n  });\n};\n\nconst GET = \"get\";\nconst POST = \"post\";\n\nexport const getItems = (): Promise<MyServerReponse<GetItemsResponse>> => {\n  return callServer(GET, \"/mooncake\", {});\n};\n\nexport const submitOrder = (\n  data: SubmitOrderRequest\n): Promise<MyServerReponse<SubmitOrderResponse>> => {\n  return callServer(POST, \"/mooncake/submitOrder\", data);\n};\n\nexport const login = (\n  data: LoginRequest\n): Promise<MyServerReponse<LoginResponse>> => {\n  return callServer(POST, \"/auth/login\", data);\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAkB,OAAO;AACrC,SAASC,QAAQ,QAAQ,iBAAiB;AAW1C,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB;AAIpD,MAAMC,UAAU,GAAGA,CACjBC,MAAc,EACdC,GAAW,EACXC,IAAiB,KACA;EACjB,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUX,QAAQ,CAAC,CAAC;IAAG;EACnD,CAAC;EACD,OAAOD,KAAK,CAAC;IACXO,MAAM;IACNE,IAAI;IACJD,GAAG,EAAE,GAAGN,WAAW,GAAGM,GAAG,EAAE;IAC3B,GAAGE;EACL,CAAC,CAAC;AACJ,CAAC;AAED,MAAMG,GAAG,GAAG,KAAK;AACjB,MAAMC,IAAI,GAAG,MAAM;AAEnB,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAkD;EACxE,OAAOT,UAAU,CAACO,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;AACzC,CAAC;AAED,OAAO,MAAMG,WAAW,GACtBP,IAAwB,IAC0B;EAClD,OAAOH,UAAU,CAACQ,IAAI,EAAE,uBAAuB,EAAEL,IAAI,CAAC;AACxD,CAAC;AAED,OAAO,MAAMQ,KAAK,GAChBR,IAAkB,IAC0B;EAC5C,OAAOH,UAAU,CAACQ,IAAI,EAAE,aAAa,EAAEL,IAAI,CAAC;AAC9C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}